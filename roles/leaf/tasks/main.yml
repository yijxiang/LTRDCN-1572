---
# tasks file for leaf
#task to configure bgp neighbor to all spine switches
       - name: Enable BGP
         nxos_feature:
           feature: bgp
           provider: "{{nxos_provider}}"
           state: enabled
         tags: bgp
       - name: Configure BGP AS
         nxos_bgp:
           asn: "{{ asn }}"
           router_id: "{{ router_id }}"
           provider: "{{ nxos_provider }}"
           state: present
         tags: bgp
       - name: Configure BGP AF
         nxos_bgp_af:
           asn: "{{ asn }}"
           afi: ipv4
           safi: unicast
           provider: "{{ nxos_provider }}"
         tags: bgp
       - name: Configure iBGP neighbors
         nxos_bgp_neighbor:
           asn: "{{ asn }}"
           neighbor: "{{ item.neighbor }}"
           remote_as: "{{ item.remote_as }}"
           update_source: "{{ item.update_source }}"
           provider: "{{ nxos_provider }}"
         with_items: "{{ bgp_neighbors }}"
         tags: bgp
       - name: Configure iBGP neighbor AF
         nxos_bgp_neighbor_af:
           asn: "{{ asn }}"
           neighbor: "{{ item.neighbor }}"
           afi: ipv4
           safi: unicast
           send_community: both
           provider: "{{ nxos_provider }}"
         with_items: "{{ bgp_neighbors }}"
         tags: bgp
#task to enable PIM for underlay multicast
       - name: Enable PIM
         nxos_feature:
           feature: pim
           provider: "{{nxos_provider}}"
           state: enabled
         tags: multicast
       - name: Configure PIM int
         nxos_pim_interface:
           interface: "{{ item.interface }}"
           sparse: true
           provider: "{{ nxos_provider }}"
         with_items: "{{L3_interfaces}}"
         tags: multicast
       - name: Configure PIM RP
         nxos_pim_rp_address:
           rp_address: "{{ rp_address }}"
           provider: "{{ nxos_provider }}"
         tags: multicast
#task to configure VXLAN fabric
       - name: Enable VXLAN Feature
         nxos_feature:
           feature: "{{ item }}"
           provider: "{{nxos_provider}}"
           state: enabled
         with_items:
          - nv overlay
          - vn-segment-vlan-based
         tags: vxlan
       - name: Enable NV Overlay
         nxos_evpn_global:
           nv_overlay_evpn: true
           provider: "{{ nxos_provider }}"
         tags: vxlan
       - name: Configure VLAN to VNI
         nxos_vlan:
           vlan_id: "{{ item.vlan_id }}"
           mapped_vni: "{{ item.vni }}"
           name: "{{ item.vlan_name }}"
           provider: "{{ nxos_provider }}"
         with_items:
         - "{{ L2VNI }}"
         - "{{ L3VNI }}"
         tags: vxlan
       - name: Configure Tenant VRF
         nxos_vrf:
           vrf: Tenant-1
           rd:  auto
           vni: "{{ L3VNI[0].vni }}"
           provider: "{{ nxos_provider }}"
         tags: vxlan
       - name: Configure VRF AF
         nxos_vrf_af:
           vrf: Tenant-1
           route_target_both_auto_evpn: true
           afi: ipv4
           safi: unicast
           provider: "{{ nxos_provider }}"
         tags: vxlan
       - name: Configure Anycast GW
         nxos_overlay_global:
           anycast_gateway_mac: 0000.2222.3333
           provider: "{{ nxos_provider }}"
         tags: vxlan
       - name: Configure L2VNI
         nxos_interface:
           interface: vlan"{{ item.vlan_id }}"
           provider: "{{ nxos_provider }}"
         with_items: "{{ L2VNI }}"
         tags: vxlan
       - name: Configure L3VNI
         nxos_interface:
           interface: vlan"{{ L3VNI[0].vlan_id }}"
           provider: "{{ nxos_provider }}"
         tags: vxlan
       - name: Assign interface to Tenant VRF
         nxos_vrf_interface:
           vrf: Tenant-1
           interface: "vlan{{ item.vlan_id }}"
           provider: "{{ nxos_provider }}"
         with_items:
         - "{{ L2VNI }}"
         - "{{ L3VNI }}"
         tags: vxlan
       - name: Configure SVI IP
         nxos_ip_interface:
           interface: "vlan{{ item.vlan_id }}"
           addr: "{{ item.ip_add }}"
           mask: "{{ item.mask }}"
           provider: "{{ nxos_provider }}"
         with_items: "{{ L2VNI }}"
         tags: vxlan
       - name: Configure L2VNI SVI
         nxos_interface:
           interface: vlan"{{ item.vlan_id }}"
           fabric_forwarding_anycast_gateway: true
           provider: "{{ nxos_provider }}"
         with_items: "{{ L2VNI }}"
         tags: vxlan
       - name: Configure L3VNI SVI
         nxos_interface:
           interface: vlan"{{ L3VNI[0].vlan_id }}"
           ip_forward: enable
           provider: "{{ nxos_provider }}"
         tags: vxlan
       - name: Configure VTEP Tunnel
         nxos_vxlan_vtep:
            interface: nve1
            shutdown: "false"
            source_interface: Loopback1
            host_reachability: "true"
            provider: "{{ nxos_provider }}"
         tags: vxlan
       - name: Configure L2VNI to VTEP
         nxos_vxlan_vtep_vni:
            interface: nve1
            vni: "{{ item.vni }}"
            multicast_group: "{{ item.mcast }}"
            provider: "{{ nxos_provider }}"
         with_items: "{{ L2VNI }}"
         tags: vxlan
       - name: Configure L3VNI to VTEP
         nxos_vxlan_vtep_vni:
            interface: nve1
            vni: "{{ L3VNI[0].vni }}"
            assoc_vrf: true
            provider: "{{ nxos_provider }}"
         tags: vxlan
#task to configure BGP EVPN
       - name: Configure BGP EVPN
         nxos_bgp_af:
           asn: "{{ asn }}"
           afi: l2vpn
           safi: evpn
           provider: "{{ nxos_provider }}"
         tags: evpn
       - name: Configure iBGP neighbor EVPN AF
         nxos_bgp_neighbor_af:
           asn: "{{ asn }}"
           neighbor: "{{ item.neighbor }}"
           afi: l2vpn
           safi: evpn
           send_community: both
           provider: "{{ nxos_provider }}"
         with_items: "{{ bgp_neighbors }}"
         tags: evpn
       - name: Configure L2VNI RD/RT
         nxos_evpn_vni:
          vni: "{{ item.vni }}"
          route_distinguisher: auto
          route_target_both: auto
          provider: "{{ nxos_provider }}"
         with_items: "{{ L2VNI }}"
         tags: evpn
